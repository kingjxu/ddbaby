// Code generated by thriftgo (0.4.2). DO NOT EDIT.

package ddbaby

import (
	"context"
	"fmt"
)

type BaseResp struct {
	StatusMessage string `thrift:"StatusMessage,1" form:"StatusMessage" json:"StatusMessage" query:"StatusMessage"`
	StatusCode    int32  `thrift:"StatusCode,2" form:"StatusCode" json:"StatusCode" query:"StatusCode"`
}

func NewBaseResp() *BaseResp {
	return &BaseResp{}
}

func (p *BaseResp) InitDefault() {
}

func (p *BaseResp) GetStatusMessage() (v string) {
	return p.StatusMessage
}

func (p *BaseResp) GetStatusCode() (v int32) {
	return p.StatusCode
}

func (p *BaseResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("BaseResp(%+v)", *p)
}

type HelloReq struct {
	Name *string `thrift:"Name,1,optional" json:"Name,omitempty" query:"name"`
}

func NewHelloReq() *HelloReq {
	return &HelloReq{}
}

func (p *HelloReq) InitDefault() {
}

var HelloReq_Name_DEFAULT string

func (p *HelloReq) GetName() (v string) {
	if !p.IsSetName() {
		return HelloReq_Name_DEFAULT
	}
	return *p.Name
}

func (p *HelloReq) IsSetName() bool {
	return p.Name != nil
}

func (p *HelloReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("HelloReq(%+v)", *p)
}

type HelloResp struct {
	RespBody *string `thrift:"RespBody,1,optional" form:"RespBody" json:"RespBody,omitempty" query:"RespBody"`
}

func NewHelloResp() *HelloResp {
	return &HelloResp{}
}

func (p *HelloResp) InitDefault() {
}

var HelloResp_RespBody_DEFAULT string

func (p *HelloResp) GetRespBody() (v string) {
	if !p.IsSetRespBody() {
		return HelloResp_RespBody_DEFAULT
	}
	return *p.RespBody
}

func (p *HelloResp) IsSetRespBody() bool {
	return p.RespBody != nil
}

func (p *HelloResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("HelloResp(%+v)", *p)
}

type DreamExplainReq struct {
	Dream *string `thrift:"Dream,1,optional" json:"Dream,omitempty" query:"dream"`
}

func NewDreamExplainReq() *DreamExplainReq {
	return &DreamExplainReq{}
}

func (p *DreamExplainReq) InitDefault() {
}

var DreamExplainReq_Dream_DEFAULT string

func (p *DreamExplainReq) GetDream() (v string) {
	if !p.IsSetDream() {
		return DreamExplainReq_Dream_DEFAULT
	}
	return *p.Dream
}

func (p *DreamExplainReq) IsSetDream() bool {
	return p.Dream != nil
}

func (p *DreamExplainReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("DreamExplainReq(%+v)", *p)
}

type DreamExplainResp struct {
	ReqID    *string   `thrift:"ReqID,1,optional" form:"ReqID" json:"ReqID,omitempty" query:"ReqID"`
	Explain  *string   `thrift:"Explain,2,optional" form:"Explain" json:"Explain,omitempty" query:"Explain"`
	BaseResp *BaseResp `thrift:"BaseResp,255" form:"BaseResp" json:"BaseResp" query:"BaseResp"`
}

func NewDreamExplainResp() *DreamExplainResp {
	return &DreamExplainResp{}
}

func (p *DreamExplainResp) InitDefault() {
}

var DreamExplainResp_ReqID_DEFAULT string

func (p *DreamExplainResp) GetReqID() (v string) {
	if !p.IsSetReqID() {
		return DreamExplainResp_ReqID_DEFAULT
	}
	return *p.ReqID
}

var DreamExplainResp_Explain_DEFAULT string

func (p *DreamExplainResp) GetExplain() (v string) {
	if !p.IsSetExplain() {
		return DreamExplainResp_Explain_DEFAULT
	}
	return *p.Explain
}

var DreamExplainResp_BaseResp_DEFAULT *BaseResp

func (p *DreamExplainResp) GetBaseResp() (v *BaseResp) {
	if !p.IsSetBaseResp() {
		return DreamExplainResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

func (p *DreamExplainResp) IsSetReqID() bool {
	return p.ReqID != nil
}

func (p *DreamExplainResp) IsSetExplain() bool {
	return p.Explain != nil
}

func (p *DreamExplainResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *DreamExplainResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("DreamExplainResp(%+v)", *p)
}

type PickNameReq struct {
	// 姓氏
	FamilyName *string `thrift:"FamilyName,1,optional" json:"FamilyName,omitempty" query:"family_name"`
	// 性别
	Gender *string `thrift:"Gender,2,optional" json:"Gender,omitempty" query:"gender"`
	// 名字长度
	NameLen *int32 `thrift:"NameLen,3,optional" json:"NameLen,omitempty" query:"name_len"`
	// 备注
	Remark *string `thrift:"Remark,4,optional" json:"Remark,omitempty" query:"remark"`
}

func NewPickNameReq() *PickNameReq {
	return &PickNameReq{}
}

func (p *PickNameReq) InitDefault() {
}

var PickNameReq_FamilyName_DEFAULT string

func (p *PickNameReq) GetFamilyName() (v string) {
	if !p.IsSetFamilyName() {
		return PickNameReq_FamilyName_DEFAULT
	}
	return *p.FamilyName
}

var PickNameReq_Gender_DEFAULT string

func (p *PickNameReq) GetGender() (v string) {
	if !p.IsSetGender() {
		return PickNameReq_Gender_DEFAULT
	}
	return *p.Gender
}

var PickNameReq_NameLen_DEFAULT int32

func (p *PickNameReq) GetNameLen() (v int32) {
	if !p.IsSetNameLen() {
		return PickNameReq_NameLen_DEFAULT
	}
	return *p.NameLen
}

var PickNameReq_Remark_DEFAULT string

func (p *PickNameReq) GetRemark() (v string) {
	if !p.IsSetRemark() {
		return PickNameReq_Remark_DEFAULT
	}
	return *p.Remark
}

func (p *PickNameReq) IsSetFamilyName() bool {
	return p.FamilyName != nil
}

func (p *PickNameReq) IsSetGender() bool {
	return p.Gender != nil
}

func (p *PickNameReq) IsSetNameLen() bool {
	return p.NameLen != nil
}

func (p *PickNameReq) IsSetRemark() bool {
	return p.Remark != nil
}

func (p *PickNameReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("PickNameReq(%+v)", *p)
}

type PickNameResp struct {
	ReqID    *string   `thrift:"ReqID,1,optional" form:"ReqID" json:"ReqID,omitempty" query:"ReqID"`
	Explain  *string   `thrift:"Explain,2,optional" form:"Explain" json:"Explain,omitempty" query:"Explain"`
	BaseResp *BaseResp `thrift:"BaseResp,255" form:"BaseResp" json:"BaseResp" query:"BaseResp"`
}

func NewPickNameResp() *PickNameResp {
	return &PickNameResp{}
}

func (p *PickNameResp) InitDefault() {
}

var PickNameResp_ReqID_DEFAULT string

func (p *PickNameResp) GetReqID() (v string) {
	if !p.IsSetReqID() {
		return PickNameResp_ReqID_DEFAULT
	}
	return *p.ReqID
}

var PickNameResp_Explain_DEFAULT string

func (p *PickNameResp) GetExplain() (v string) {
	if !p.IsSetExplain() {
		return PickNameResp_Explain_DEFAULT
	}
	return *p.Explain
}

var PickNameResp_BaseResp_DEFAULT *BaseResp

func (p *PickNameResp) GetBaseResp() (v *BaseResp) {
	if !p.IsSetBaseResp() {
		return PickNameResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

func (p *PickNameResp) IsSetReqID() bool {
	return p.ReqID != nil
}

func (p *PickNameResp) IsSetExplain() bool {
	return p.Explain != nil
}

func (p *PickNameResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *PickNameResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("PickNameResp(%+v)", *p)
}

type NameFortuneReq struct {
	Name *string `thrift:"Name,1,optional" json:"Name,omitempty" query:"name"`
}

func NewNameFortuneReq() *NameFortuneReq {
	return &NameFortuneReq{}
}

func (p *NameFortuneReq) InitDefault() {
}

var NameFortuneReq_Name_DEFAULT string

func (p *NameFortuneReq) GetName() (v string) {
	if !p.IsSetName() {
		return NameFortuneReq_Name_DEFAULT
	}
	return *p.Name
}

func (p *NameFortuneReq) IsSetName() bool {
	return p.Name != nil
}

func (p *NameFortuneReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("NameFortuneReq(%+v)", *p)
}

type NameFortuneResp struct {
	ReqID    *string   `thrift:"ReqID,1,optional" form:"ReqID" json:"ReqID,omitempty" query:"ReqID"`
	Explain  *string   `thrift:"Explain,2,optional" form:"Explain" json:"Explain,omitempty" query:"Explain"`
	BaseResp *BaseResp `thrift:"BaseResp,255" form:"BaseResp" json:"BaseResp" query:"BaseResp"`
}

func NewNameFortuneResp() *NameFortuneResp {
	return &NameFortuneResp{}
}

func (p *NameFortuneResp) InitDefault() {
}

var NameFortuneResp_ReqID_DEFAULT string

func (p *NameFortuneResp) GetReqID() (v string) {
	if !p.IsSetReqID() {
		return NameFortuneResp_ReqID_DEFAULT
	}
	return *p.ReqID
}

var NameFortuneResp_Explain_DEFAULT string

func (p *NameFortuneResp) GetExplain() (v string) {
	if !p.IsSetExplain() {
		return NameFortuneResp_Explain_DEFAULT
	}
	return *p.Explain
}

var NameFortuneResp_BaseResp_DEFAULT *BaseResp

func (p *NameFortuneResp) GetBaseResp() (v *BaseResp) {
	if !p.IsSetBaseResp() {
		return NameFortuneResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

func (p *NameFortuneResp) IsSetReqID() bool {
	return p.ReqID != nil
}

func (p *NameFortuneResp) IsSetExplain() bool {
	return p.Explain != nil
}

func (p *NameFortuneResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *NameFortuneResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("NameFortuneResp(%+v)", *p)
}

type TaLuoPredictReq struct {
	Query *string `thrift:"Query,1,optional" json:"Query,omitempty" query:"query"`
}

func NewTaLuoPredictReq() *TaLuoPredictReq {
	return &TaLuoPredictReq{}
}

func (p *TaLuoPredictReq) InitDefault() {
}

var TaLuoPredictReq_Query_DEFAULT string

func (p *TaLuoPredictReq) GetQuery() (v string) {
	if !p.IsSetQuery() {
		return TaLuoPredictReq_Query_DEFAULT
	}
	return *p.Query
}

func (p *TaLuoPredictReq) IsSetQuery() bool {
	return p.Query != nil
}

func (p *TaLuoPredictReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("TaLuoPredictReq(%+v)", *p)
}

type TaLuoPredictResp struct {
	ReqID    *string   `thrift:"ReqID,1,optional" form:"ReqID" json:"ReqID,omitempty" query:"ReqID"`
	Explain  *string   `thrift:"Explain,2,optional" form:"Explain" json:"Explain,omitempty" query:"Explain"`
	BaseResp *BaseResp `thrift:"BaseResp,255" form:"BaseResp" json:"BaseResp" query:"BaseResp"`
}

func NewTaLuoPredictResp() *TaLuoPredictResp {
	return &TaLuoPredictResp{}
}

func (p *TaLuoPredictResp) InitDefault() {
}

var TaLuoPredictResp_ReqID_DEFAULT string

func (p *TaLuoPredictResp) GetReqID() (v string) {
	if !p.IsSetReqID() {
		return TaLuoPredictResp_ReqID_DEFAULT
	}
	return *p.ReqID
}

var TaLuoPredictResp_Explain_DEFAULT string

func (p *TaLuoPredictResp) GetExplain() (v string) {
	if !p.IsSetExplain() {
		return TaLuoPredictResp_Explain_DEFAULT
	}
	return *p.Explain
}

var TaLuoPredictResp_BaseResp_DEFAULT *BaseResp

func (p *TaLuoPredictResp) GetBaseResp() (v *BaseResp) {
	if !p.IsSetBaseResp() {
		return TaLuoPredictResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

func (p *TaLuoPredictResp) IsSetReqID() bool {
	return p.ReqID != nil
}

func (p *TaLuoPredictResp) IsSetExplain() bool {
	return p.Explain != nil
}

func (p *TaLuoPredictResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *TaLuoPredictResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("TaLuoPredictResp(%+v)", *p)
}

type HealthEvaluateQuestionItem struct {
	QuestionID *int64   `thrift:"QuestionID,1,optional" form:"QuestionID" json:"QuestionID,omitempty" query:"QuestionID"`
	Content    *string  `thrift:"Content,2,optional" form:"Content" json:"Content,omitempty" query:"Content"`
	Options    []string `thrift:"Options,3,optional" form:"Options" json:"Options,omitempty" query:"Options"`
}

func NewHealthEvaluateQuestionItem() *HealthEvaluateQuestionItem {
	return &HealthEvaluateQuestionItem{}
}

func (p *HealthEvaluateQuestionItem) InitDefault() {
}

var HealthEvaluateQuestionItem_QuestionID_DEFAULT int64

func (p *HealthEvaluateQuestionItem) GetQuestionID() (v int64) {
	if !p.IsSetQuestionID() {
		return HealthEvaluateQuestionItem_QuestionID_DEFAULT
	}
	return *p.QuestionID
}

var HealthEvaluateQuestionItem_Content_DEFAULT string

func (p *HealthEvaluateQuestionItem) GetContent() (v string) {
	if !p.IsSetContent() {
		return HealthEvaluateQuestionItem_Content_DEFAULT
	}
	return *p.Content
}

var HealthEvaluateQuestionItem_Options_DEFAULT []string

func (p *HealthEvaluateQuestionItem) GetOptions() (v []string) {
	if !p.IsSetOptions() {
		return HealthEvaluateQuestionItem_Options_DEFAULT
	}
	return p.Options
}

func (p *HealthEvaluateQuestionItem) IsSetQuestionID() bool {
	return p.QuestionID != nil
}

func (p *HealthEvaluateQuestionItem) IsSetContent() bool {
	return p.Content != nil
}

func (p *HealthEvaluateQuestionItem) IsSetOptions() bool {
	return p.Options != nil
}

func (p *HealthEvaluateQuestionItem) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("HealthEvaluateQuestionItem(%+v)", *p)
}

type HealthEvaluateQuestionsReq struct {
	QuestionType *string `thrift:"QuestionType,1,optional" json:"QuestionType,omitempty" query:"question_type"`
}

func NewHealthEvaluateQuestionsReq() *HealthEvaluateQuestionsReq {
	return &HealthEvaluateQuestionsReq{}
}

func (p *HealthEvaluateQuestionsReq) InitDefault() {
}

var HealthEvaluateQuestionsReq_QuestionType_DEFAULT string

func (p *HealthEvaluateQuestionsReq) GetQuestionType() (v string) {
	if !p.IsSetQuestionType() {
		return HealthEvaluateQuestionsReq_QuestionType_DEFAULT
	}
	return *p.QuestionType
}

func (p *HealthEvaluateQuestionsReq) IsSetQuestionType() bool {
	return p.QuestionType != nil
}

func (p *HealthEvaluateQuestionsReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("HealthEvaluateQuestionsReq(%+v)", *p)
}

type HealthEvaluateQuestionsResp struct {
	Questions []*HealthEvaluateQuestionItem `thrift:"Questions,1,optional" form:"Questions" json:"Questions,omitempty" query:"Questions"`
	BaseResp  *BaseResp                     `thrift:"BaseResp,255" form:"BaseResp" json:"BaseResp" query:"BaseResp"`
}

func NewHealthEvaluateQuestionsResp() *HealthEvaluateQuestionsResp {
	return &HealthEvaluateQuestionsResp{}
}

func (p *HealthEvaluateQuestionsResp) InitDefault() {
}

var HealthEvaluateQuestionsResp_Questions_DEFAULT []*HealthEvaluateQuestionItem

func (p *HealthEvaluateQuestionsResp) GetQuestions() (v []*HealthEvaluateQuestionItem) {
	if !p.IsSetQuestions() {
		return HealthEvaluateQuestionsResp_Questions_DEFAULT
	}
	return p.Questions
}

var HealthEvaluateQuestionsResp_BaseResp_DEFAULT *BaseResp

func (p *HealthEvaluateQuestionsResp) GetBaseResp() (v *BaseResp) {
	if !p.IsSetBaseResp() {
		return HealthEvaluateQuestionsResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

func (p *HealthEvaluateQuestionsResp) IsSetQuestions() bool {
	return p.Questions != nil
}

func (p *HealthEvaluateQuestionsResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *HealthEvaluateQuestionsResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("HealthEvaluateQuestionsResp(%+v)", *p)
}

type HealthCreateOrderReq struct {
	ProductID *string `thrift:"ProductID,1,optional" json:"ProductID,omitempty" query:"product_id"`
}

func NewHealthCreateOrderReq() *HealthCreateOrderReq {
	return &HealthCreateOrderReq{}
}

func (p *HealthCreateOrderReq) InitDefault() {
}

var HealthCreateOrderReq_ProductID_DEFAULT string

func (p *HealthCreateOrderReq) GetProductID() (v string) {
	if !p.IsSetProductID() {
		return HealthCreateOrderReq_ProductID_DEFAULT
	}
	return *p.ProductID
}

func (p *HealthCreateOrderReq) IsSetProductID() bool {
	return p.ProductID != nil
}

func (p *HealthCreateOrderReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("HealthCreateOrderReq(%+v)", *p)
}

type HealthCreateOrderResp struct {
	OrderID  *string   `thrift:"OrderID,1,optional" form:"OrderID" json:"OrderID,omitempty" query:"OrderID"`
	PrepayID *string   `thrift:"PrepayID,2,optional" form:"PrepayID" json:"PrepayID,omitempty" query:"PrepayID"`
	BaseResp *BaseResp `thrift:"BaseResp,255" form:"BaseResp" json:"BaseResp" query:"BaseResp"`
}

func NewHealthCreateOrderResp() *HealthCreateOrderResp {
	return &HealthCreateOrderResp{}
}

func (p *HealthCreateOrderResp) InitDefault() {
}

var HealthCreateOrderResp_OrderID_DEFAULT string

func (p *HealthCreateOrderResp) GetOrderID() (v string) {
	if !p.IsSetOrderID() {
		return HealthCreateOrderResp_OrderID_DEFAULT
	}
	return *p.OrderID
}

var HealthCreateOrderResp_PrepayID_DEFAULT string

func (p *HealthCreateOrderResp) GetPrepayID() (v string) {
	if !p.IsSetPrepayID() {
		return HealthCreateOrderResp_PrepayID_DEFAULT
	}
	return *p.PrepayID
}

var HealthCreateOrderResp_BaseResp_DEFAULT *BaseResp

func (p *HealthCreateOrderResp) GetBaseResp() (v *BaseResp) {
	if !p.IsSetBaseResp() {
		return HealthCreateOrderResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

func (p *HealthCreateOrderResp) IsSetOrderID() bool {
	return p.OrderID != nil
}

func (p *HealthCreateOrderResp) IsSetPrepayID() bool {
	return p.PrepayID != nil
}

func (p *HealthCreateOrderResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *HealthCreateOrderResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("HealthCreateOrderResp(%+v)", *p)
}

type HealthDeliveryReq struct {
	ProductID *string `thrift:"ProductID,1,optional" json:"ProductID,omitempty" query:"product_id"`
}

func NewHealthDeliveryReq() *HealthDeliveryReq {
	return &HealthDeliveryReq{}
}

func (p *HealthDeliveryReq) InitDefault() {
}

var HealthDeliveryReq_ProductID_DEFAULT string

func (p *HealthDeliveryReq) GetProductID() (v string) {
	if !p.IsSetProductID() {
		return HealthDeliveryReq_ProductID_DEFAULT
	}
	return *p.ProductID
}

func (p *HealthDeliveryReq) IsSetProductID() bool {
	return p.ProductID != nil
}

func (p *HealthDeliveryReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("HealthDeliveryReq(%+v)", *p)
}

type HealthDeliveryResp struct {
	OrderID  *string   `thrift:"OrderID,1,optional" form:"OrderID" json:"OrderID,omitempty" query:"OrderID"`
	PrepayID *string   `thrift:"PrepayID,2,optional" form:"PrepayID" json:"PrepayID,omitempty" query:"PrepayID"`
	BaseResp *BaseResp `thrift:"BaseResp,255" form:"BaseResp" json:"BaseResp" query:"BaseResp"`
}

func NewHealthDeliveryResp() *HealthDeliveryResp {
	return &HealthDeliveryResp{}
}

func (p *HealthDeliveryResp) InitDefault() {
}

var HealthDeliveryResp_OrderID_DEFAULT string

func (p *HealthDeliveryResp) GetOrderID() (v string) {
	if !p.IsSetOrderID() {
		return HealthDeliveryResp_OrderID_DEFAULT
	}
	return *p.OrderID
}

var HealthDeliveryResp_PrepayID_DEFAULT string

func (p *HealthDeliveryResp) GetPrepayID() (v string) {
	if !p.IsSetPrepayID() {
		return HealthDeliveryResp_PrepayID_DEFAULT
	}
	return *p.PrepayID
}

var HealthDeliveryResp_BaseResp_DEFAULT *BaseResp

func (p *HealthDeliveryResp) GetBaseResp() (v *BaseResp) {
	if !p.IsSetBaseResp() {
		return HealthDeliveryResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

func (p *HealthDeliveryResp) IsSetOrderID() bool {
	return p.OrderID != nil
}

func (p *HealthDeliveryResp) IsSetPrepayID() bool {
	return p.PrepayID != nil
}

func (p *HealthDeliveryResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *HealthDeliveryResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("HealthDeliveryResp(%+v)", *p)
}

type JkQoItem struct {
	ID       *int64   `thrift:"id,1,optional" form:"id" json:"id,omitempty" query:"id"`
	Question *string  `thrift:"question,2,optional" form:"question" json:"question,omitempty" query:"question"`
	Options  []string `thrift:"options,3,optional" form:"options" json:"options,omitempty" query:"options"`
}

func NewJkQoItem() *JkQoItem {
	return &JkQoItem{}
}

func (p *JkQoItem) InitDefault() {
}

var JkQoItem_ID_DEFAULT int64

func (p *JkQoItem) GetID() (v int64) {
	if !p.IsSetID() {
		return JkQoItem_ID_DEFAULT
	}
	return *p.ID
}

var JkQoItem_Question_DEFAULT string

func (p *JkQoItem) GetQuestion() (v string) {
	if !p.IsSetQuestion() {
		return JkQoItem_Question_DEFAULT
	}
	return *p.Question
}

var JkQoItem_Options_DEFAULT []string

func (p *JkQoItem) GetOptions() (v []string) {
	if !p.IsSetOptions() {
		return JkQoItem_Options_DEFAULT
	}
	return p.Options
}

func (p *JkQoItem) IsSetID() bool {
	return p.ID != nil
}

func (p *JkQoItem) IsSetQuestion() bool {
	return p.Question != nil
}

func (p *JkQoItem) IsSetOptions() bool {
	return p.Options != nil
}

func (p *JkQoItem) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("JkQoItem(%+v)", *p)
}

type GetJkQoListReq struct {
	QoType  *string `thrift:"qo_type,1,optional" json:"qo_type,omitempty" query:"qo_type"`
	NeedPic *bool   `thrift:"need_pic,2,optional" json:"need_pic,omitempty" query:"need_pic"`
}

func NewGetJkQoListReq() *GetJkQoListReq {
	return &GetJkQoListReq{}
}

func (p *GetJkQoListReq) InitDefault() {
}

var GetJkQoListReq_QoType_DEFAULT string

func (p *GetJkQoListReq) GetQoType() (v string) {
	if !p.IsSetQoType() {
		return GetJkQoListReq_QoType_DEFAULT
	}
	return *p.QoType
}

var GetJkQoListReq_NeedPic_DEFAULT bool

func (p *GetJkQoListReq) GetNeedPic() (v bool) {
	if !p.IsSetNeedPic() {
		return GetJkQoListReq_NeedPic_DEFAULT
	}
	return *p.NeedPic
}

func (p *GetJkQoListReq) IsSetQoType() bool {
	return p.QoType != nil
}

func (p *GetJkQoListReq) IsSetNeedPic() bool {
	return p.NeedPic != nil
}

func (p *GetJkQoListReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetJkQoListReq(%+v)", *p)
}

type GetJkQoListResp struct {
	Title              *string     `thrift:"title,1,optional" form:"title" json:"title,omitempty" query:"title"`
	Pic                *string     `thrift:"pic,2,optional" form:"pic" json:"pic,omitempty" query:"pic"`
	QoCnt              *int32      `thrift:"qo_cnt,3,optional" form:"qo_cnt" json:"qo_cnt,omitempty" query:"qo_cnt"`
	ExpectCompleteTime *int32      `thrift:"expect_complete_time,4,optional" form:"expect_complete_time" json:"expect_complete_time,omitempty" query:"expect_complete_time"`
	Qo                 []*JkQoItem `thrift:"qo,5,optional" form:"qo" json:"qo,omitempty" query:"qo"`
	Tips               *string     `thrift:"tips,6,optional" form:"tips" json:"tips,omitempty" query:"tips"`
	ParticipantCount   *int32      `thrift:"participant_count,7,optional" form:"participant_count" json:"participant_count,omitempty" query:"participant_count"`
	Toast              *string     `thrift:"toast,8,optional" form:"toast" json:"toast,omitempty" query:"toast"`
	BaseResp           *BaseResp   `thrift:"BaseResp,255" form:"BaseResp" json:"BaseResp" query:"BaseResp"`
}

func NewGetJkQoListResp() *GetJkQoListResp {
	return &GetJkQoListResp{}
}

func (p *GetJkQoListResp) InitDefault() {
}

var GetJkQoListResp_Title_DEFAULT string

func (p *GetJkQoListResp) GetTitle() (v string) {
	if !p.IsSetTitle() {
		return GetJkQoListResp_Title_DEFAULT
	}
	return *p.Title
}

var GetJkQoListResp_Pic_DEFAULT string

func (p *GetJkQoListResp) GetPic() (v string) {
	if !p.IsSetPic() {
		return GetJkQoListResp_Pic_DEFAULT
	}
	return *p.Pic
}

var GetJkQoListResp_QoCnt_DEFAULT int32

func (p *GetJkQoListResp) GetQoCnt() (v int32) {
	if !p.IsSetQoCnt() {
		return GetJkQoListResp_QoCnt_DEFAULT
	}
	return *p.QoCnt
}

var GetJkQoListResp_ExpectCompleteTime_DEFAULT int32

func (p *GetJkQoListResp) GetExpectCompleteTime() (v int32) {
	if !p.IsSetExpectCompleteTime() {
		return GetJkQoListResp_ExpectCompleteTime_DEFAULT
	}
	return *p.ExpectCompleteTime
}

var GetJkQoListResp_Qo_DEFAULT []*JkQoItem

func (p *GetJkQoListResp) GetQo() (v []*JkQoItem) {
	if !p.IsSetQo() {
		return GetJkQoListResp_Qo_DEFAULT
	}
	return p.Qo
}

var GetJkQoListResp_Tips_DEFAULT string

func (p *GetJkQoListResp) GetTips() (v string) {
	if !p.IsSetTips() {
		return GetJkQoListResp_Tips_DEFAULT
	}
	return *p.Tips
}

var GetJkQoListResp_ParticipantCount_DEFAULT int32

func (p *GetJkQoListResp) GetParticipantCount() (v int32) {
	if !p.IsSetParticipantCount() {
		return GetJkQoListResp_ParticipantCount_DEFAULT
	}
	return *p.ParticipantCount
}

var GetJkQoListResp_Toast_DEFAULT string

func (p *GetJkQoListResp) GetToast() (v string) {
	if !p.IsSetToast() {
		return GetJkQoListResp_Toast_DEFAULT
	}
	return *p.Toast
}

var GetJkQoListResp_BaseResp_DEFAULT *BaseResp

func (p *GetJkQoListResp) GetBaseResp() (v *BaseResp) {
	if !p.IsSetBaseResp() {
		return GetJkQoListResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

func (p *GetJkQoListResp) IsSetTitle() bool {
	return p.Title != nil
}

func (p *GetJkQoListResp) IsSetPic() bool {
	return p.Pic != nil
}

func (p *GetJkQoListResp) IsSetQoCnt() bool {
	return p.QoCnt != nil
}

func (p *GetJkQoListResp) IsSetExpectCompleteTime() bool {
	return p.ExpectCompleteTime != nil
}

func (p *GetJkQoListResp) IsSetQo() bool {
	return p.Qo != nil
}

func (p *GetJkQoListResp) IsSetTips() bool {
	return p.Tips != nil
}

func (p *GetJkQoListResp) IsSetParticipantCount() bool {
	return p.ParticipantCount != nil
}

func (p *GetJkQoListResp) IsSetToast() bool {
	return p.Toast != nil
}

func (p *GetJkQoListResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *GetJkQoListResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetJkQoListResp(%+v)", *p)
}

type QAItem struct {
	Question *string `thrift:"question,1,optional" form:"question" json:"question,omitempty" query:"question"`
	Answer   *string `thrift:"answer,2,optional" form:"answer" json:"answer,omitempty" query:"answer"`
}

func NewQAItem() *QAItem {
	return &QAItem{}
}

func (p *QAItem) InitDefault() {
}

var QAItem_Question_DEFAULT string

func (p *QAItem) GetQuestion() (v string) {
	if !p.IsSetQuestion() {
		return QAItem_Question_DEFAULT
	}
	return *p.Question
}

var QAItem_Answer_DEFAULT string

func (p *QAItem) GetAnswer() (v string) {
	if !p.IsSetAnswer() {
		return QAItem_Answer_DEFAULT
	}
	return *p.Answer
}

func (p *QAItem) IsSetQuestion() bool {
	return p.Question != nil
}

func (p *QAItem) IsSetAnswer() bool {
	return p.Answer != nil
}

func (p *QAItem) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("QAItem(%+v)", *p)
}

type JkCreateOrderReq struct {
	UserID  *string   `thrift:"user_id,1,optional" json:"user_id,omitempty" query:"user_id"`
	QoType  *string   `thrift:"qo_type,2,optional" json:"qo_type,omitempty" query:"qo_type"`
	QaItems []*QAItem `thrift:"qa_items,3,optional" json:"qa_items,omitempty" query:"qa_items"`
	Seq     *int32    `thrift:"seq,4,optional" json:"seq,omitempty" query:"seq"`
	OrderID *string   `thrift:"order_id,5,optional" json:"order_id,omitempty" query:"order_id"`
}

func NewJkCreateOrderReq() *JkCreateOrderReq {
	return &JkCreateOrderReq{}
}

func (p *JkCreateOrderReq) InitDefault() {
}

var JkCreateOrderReq_UserID_DEFAULT string

func (p *JkCreateOrderReq) GetUserID() (v string) {
	if !p.IsSetUserID() {
		return JkCreateOrderReq_UserID_DEFAULT
	}
	return *p.UserID
}

var JkCreateOrderReq_QoType_DEFAULT string

func (p *JkCreateOrderReq) GetQoType() (v string) {
	if !p.IsSetQoType() {
		return JkCreateOrderReq_QoType_DEFAULT
	}
	return *p.QoType
}

var JkCreateOrderReq_QaItems_DEFAULT []*QAItem

func (p *JkCreateOrderReq) GetQaItems() (v []*QAItem) {
	if !p.IsSetQaItems() {
		return JkCreateOrderReq_QaItems_DEFAULT
	}
	return p.QaItems
}

var JkCreateOrderReq_Seq_DEFAULT int32

func (p *JkCreateOrderReq) GetSeq() (v int32) {
	if !p.IsSetSeq() {
		return JkCreateOrderReq_Seq_DEFAULT
	}
	return *p.Seq
}

var JkCreateOrderReq_OrderID_DEFAULT string

func (p *JkCreateOrderReq) GetOrderID() (v string) {
	if !p.IsSetOrderID() {
		return JkCreateOrderReq_OrderID_DEFAULT
	}
	return *p.OrderID
}

func (p *JkCreateOrderReq) IsSetUserID() bool {
	return p.UserID != nil
}

func (p *JkCreateOrderReq) IsSetQoType() bool {
	return p.QoType != nil
}

func (p *JkCreateOrderReq) IsSetQaItems() bool {
	return p.QaItems != nil
}

func (p *JkCreateOrderReq) IsSetSeq() bool {
	return p.Seq != nil
}

func (p *JkCreateOrderReq) IsSetOrderID() bool {
	return p.OrderID != nil
}

func (p *JkCreateOrderReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("JkCreateOrderReq(%+v)", *p)
}

type JkCreateOrderResp struct {
	OrderID  *string   `thrift:"order_id,1,optional" form:"order_id" json:"order_id,omitempty" query:"order_id"`
	PayURL   *string   `thrift:"pay_url,2,optional" form:"pay_url" json:"pay_url,omitempty" query:"pay_url"`
	BaseResp *BaseResp `thrift:"BaseResp,255" form:"BaseResp" json:"BaseResp" query:"BaseResp"`
}

func NewJkCreateOrderResp() *JkCreateOrderResp {
	return &JkCreateOrderResp{}
}

func (p *JkCreateOrderResp) InitDefault() {
}

var JkCreateOrderResp_OrderID_DEFAULT string

func (p *JkCreateOrderResp) GetOrderID() (v string) {
	if !p.IsSetOrderID() {
		return JkCreateOrderResp_OrderID_DEFAULT
	}
	return *p.OrderID
}

var JkCreateOrderResp_PayURL_DEFAULT string

func (p *JkCreateOrderResp) GetPayURL() (v string) {
	if !p.IsSetPayURL() {
		return JkCreateOrderResp_PayURL_DEFAULT
	}
	return *p.PayURL
}

var JkCreateOrderResp_BaseResp_DEFAULT *BaseResp

func (p *JkCreateOrderResp) GetBaseResp() (v *BaseResp) {
	if !p.IsSetBaseResp() {
		return JkCreateOrderResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

func (p *JkCreateOrderResp) IsSetOrderID() bool {
	return p.OrderID != nil
}

func (p *JkCreateOrderResp) IsSetPayURL() bool {
	return p.PayURL != nil
}

func (p *JkCreateOrderResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *JkCreateOrderResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("JkCreateOrderResp(%+v)", *p)
}

type GetOrderInfoReq struct {
	OrderID *string `thrift:"order_id,1,optional" json:"order_id,omitempty" query:"order_id"`
}

func NewGetOrderInfoReq() *GetOrderInfoReq {
	return &GetOrderInfoReq{}
}

func (p *GetOrderInfoReq) InitDefault() {
}

var GetOrderInfoReq_OrderID_DEFAULT string

func (p *GetOrderInfoReq) GetOrderID() (v string) {
	if !p.IsSetOrderID() {
		return GetOrderInfoReq_OrderID_DEFAULT
	}
	return *p.OrderID
}

func (p *GetOrderInfoReq) IsSetOrderID() bool {
	return p.OrderID != nil
}

func (p *GetOrderInfoReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetOrderInfoReq(%+v)", *p)
}

type GetOrderInfoResp struct {
	OrderID     *string   `thrift:"order_id,1,optional" form:"order_id" json:"order_id,omitempty" query:"order_id"`
	UserID      *string   `thrift:"user_id,2,optional" form:"user_id" json:"user_id,omitempty" query:"user_id"`
	ProductName *string   `thrift:"product_name,3,optional" form:"product_name" json:"product_name,omitempty" query:"product_name"`
	Amount      *int32    `thrift:"amount,4,optional" form:"amount" json:"amount,omitempty" query:"amount"`
	Status      *int32    `thrift:"status,5,optional" form:"status" json:"status,omitempty" query:"status"`
	Seq         *int32    `thrift:"seq,6,optional" form:"seq" json:"seq,omitempty" query:"seq"`
	CreateTime  *int64    `thrift:"create_time,7,optional" form:"create_time" json:"create_time,omitempty" query:"create_time"`
	NextAmount  *int32    `thrift:"next_amount,8,optional" form:"next_amount" json:"next_amount,omitempty" query:"next_amount"`
	QaItems     []*QAItem `thrift:"qa_items,9,optional" form:"qa_items" json:"qa_items,omitempty" query:"qa_items"`
	JumpURL     *string   `thrift:"jump_url,50,optional" form:"jump_url" json:"jump_url,omitempty" query:"jump_url"`
	BaseResp    *BaseResp `thrift:"BaseResp,255" form:"BaseResp" json:"BaseResp" query:"BaseResp"`
}

func NewGetOrderInfoResp() *GetOrderInfoResp {
	return &GetOrderInfoResp{}
}

func (p *GetOrderInfoResp) InitDefault() {
}

var GetOrderInfoResp_OrderID_DEFAULT string

func (p *GetOrderInfoResp) GetOrderID() (v string) {
	if !p.IsSetOrderID() {
		return GetOrderInfoResp_OrderID_DEFAULT
	}
	return *p.OrderID
}

var GetOrderInfoResp_UserID_DEFAULT string

func (p *GetOrderInfoResp) GetUserID() (v string) {
	if !p.IsSetUserID() {
		return GetOrderInfoResp_UserID_DEFAULT
	}
	return *p.UserID
}

var GetOrderInfoResp_ProductName_DEFAULT string

func (p *GetOrderInfoResp) GetProductName() (v string) {
	if !p.IsSetProductName() {
		return GetOrderInfoResp_ProductName_DEFAULT
	}
	return *p.ProductName
}

var GetOrderInfoResp_Amount_DEFAULT int32

func (p *GetOrderInfoResp) GetAmount() (v int32) {
	if !p.IsSetAmount() {
		return GetOrderInfoResp_Amount_DEFAULT
	}
	return *p.Amount
}

var GetOrderInfoResp_Status_DEFAULT int32

func (p *GetOrderInfoResp) GetStatus() (v int32) {
	if !p.IsSetStatus() {
		return GetOrderInfoResp_Status_DEFAULT
	}
	return *p.Status
}

var GetOrderInfoResp_Seq_DEFAULT int32

func (p *GetOrderInfoResp) GetSeq() (v int32) {
	if !p.IsSetSeq() {
		return GetOrderInfoResp_Seq_DEFAULT
	}
	return *p.Seq
}

var GetOrderInfoResp_CreateTime_DEFAULT int64

func (p *GetOrderInfoResp) GetCreateTime() (v int64) {
	if !p.IsSetCreateTime() {
		return GetOrderInfoResp_CreateTime_DEFAULT
	}
	return *p.CreateTime
}

var GetOrderInfoResp_NextAmount_DEFAULT int32

func (p *GetOrderInfoResp) GetNextAmount() (v int32) {
	if !p.IsSetNextAmount() {
		return GetOrderInfoResp_NextAmount_DEFAULT
	}
	return *p.NextAmount
}

var GetOrderInfoResp_QaItems_DEFAULT []*QAItem

func (p *GetOrderInfoResp) GetQaItems() (v []*QAItem) {
	if !p.IsSetQaItems() {
		return GetOrderInfoResp_QaItems_DEFAULT
	}
	return p.QaItems
}

var GetOrderInfoResp_JumpURL_DEFAULT string

func (p *GetOrderInfoResp) GetJumpURL() (v string) {
	if !p.IsSetJumpURL() {
		return GetOrderInfoResp_JumpURL_DEFAULT
	}
	return *p.JumpURL
}

var GetOrderInfoResp_BaseResp_DEFAULT *BaseResp

func (p *GetOrderInfoResp) GetBaseResp() (v *BaseResp) {
	if !p.IsSetBaseResp() {
		return GetOrderInfoResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

func (p *GetOrderInfoResp) IsSetOrderID() bool {
	return p.OrderID != nil
}

func (p *GetOrderInfoResp) IsSetUserID() bool {
	return p.UserID != nil
}

func (p *GetOrderInfoResp) IsSetProductName() bool {
	return p.ProductName != nil
}

func (p *GetOrderInfoResp) IsSetAmount() bool {
	return p.Amount != nil
}

func (p *GetOrderInfoResp) IsSetStatus() bool {
	return p.Status != nil
}

func (p *GetOrderInfoResp) IsSetSeq() bool {
	return p.Seq != nil
}

func (p *GetOrderInfoResp) IsSetCreateTime() bool {
	return p.CreateTime != nil
}

func (p *GetOrderInfoResp) IsSetNextAmount() bool {
	return p.NextAmount != nil
}

func (p *GetOrderInfoResp) IsSetQaItems() bool {
	return p.QaItems != nil
}

func (p *GetOrderInfoResp) IsSetJumpURL() bool {
	return p.JumpURL != nil
}

func (p *GetOrderInfoResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *GetOrderInfoResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetOrderInfoResp(%+v)", *p)
}

type PayCallbackReq struct {
	OrderID *string `thrift:"order_id,1,optional" json:"order_id,omitempty" query:"user_id"`
}

func NewPayCallbackReq() *PayCallbackReq {
	return &PayCallbackReq{}
}

func (p *PayCallbackReq) InitDefault() {
}

var PayCallbackReq_OrderID_DEFAULT string

func (p *PayCallbackReq) GetOrderID() (v string) {
	if !p.IsSetOrderID() {
		return PayCallbackReq_OrderID_DEFAULT
	}
	return *p.OrderID
}

func (p *PayCallbackReq) IsSetOrderID() bool {
	return p.OrderID != nil
}

func (p *PayCallbackReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("PayCallbackReq(%+v)", *p)
}

type PayCallbackResp struct {
	Code    *string `thrift:"code,1,optional" form:"code" json:"code,omitempty" query:"code"`
	Message *string `thrift:"message,2,optional" form:"message" json:"message,omitempty" query:"message"`
}

func NewPayCallbackResp() *PayCallbackResp {
	return &PayCallbackResp{}
}

func (p *PayCallbackResp) InitDefault() {
}

var PayCallbackResp_Code_DEFAULT string

func (p *PayCallbackResp) GetCode() (v string) {
	if !p.IsSetCode() {
		return PayCallbackResp_Code_DEFAULT
	}
	return *p.Code
}

var PayCallbackResp_Message_DEFAULT string

func (p *PayCallbackResp) GetMessage() (v string) {
	if !p.IsSetMessage() {
		return PayCallbackResp_Message_DEFAULT
	}
	return *p.Message
}

func (p *PayCallbackResp) IsSetCode() bool {
	return p.Code != nil
}

func (p *PayCallbackResp) IsSetMessage() bool {
	return p.Message != nil
}

func (p *PayCallbackResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("PayCallbackResp(%+v)", *p)
}

type WechatAddCustomCallbackReq struct {
}

func NewWechatAddCustomCallbackReq() *WechatAddCustomCallbackReq {
	return &WechatAddCustomCallbackReq{}
}

func (p *WechatAddCustomCallbackReq) InitDefault() {
}

func (p *WechatAddCustomCallbackReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("WechatAddCustomCallbackReq(%+v)", *p)
}

type WechatAddCustomCallbackResp struct {
}

func NewWechatAddCustomCallbackResp() *WechatAddCustomCallbackResp {
	return &WechatAddCustomCallbackResp{}
}

func (p *WechatAddCustomCallbackResp) InitDefault() {
}

func (p *WechatAddCustomCallbackResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("WechatAddCustomCallbackResp(%+v)", *p)
}

type DDBabyService interface {
	HelloMethod(ctx context.Context, req *HelloReq) (r *HelloResp, err error)

	DreamExplain(ctx context.Context, req *DreamExplainReq) (r *DreamExplainResp, err error)

	PickName(ctx context.Context, req *PickNameReq) (r *PickNameResp, err error)

	NameFortune(ctx context.Context, req *NameFortuneReq) (r *NameFortuneResp, err error)

	TaLuoPredict(ctx context.Context, req *TaLuoPredictReq) (r *TaLuoPredictResp, err error)

	HealthEvaluateQuestions(ctx context.Context, req *HealthEvaluateQuestionsReq) (r *HealthEvaluateQuestionsResp, err error)

	HealthCreateOrder(ctx context.Context, req *HealthCreateOrderReq) (r *HealthCreateOrderResp, err error)

	GetJkQoList(ctx context.Context, req *GetJkQoListReq) (r *GetJkQoListResp, err error)

	JkCreateOrder(ctx context.Context, req *JkCreateOrderReq) (r *JkCreateOrderResp, err error)

	GetOrderInfo(ctx context.Context, req *GetOrderInfoReq) (r *GetOrderInfoResp, err error)

	PayCallback(ctx context.Context, req *PayCallbackReq) (r *PayCallbackResp, err error)

	WechatAddCustomCallback(ctx context.Context, req *WechatAddCustomCallbackReq) (r *WechatAddCustomCallbackResp, err error)
}
